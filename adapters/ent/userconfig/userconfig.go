// Code generated by ent, DO NOT EDIT.

package entuserconfig

import (
	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the userconfig type in the database.
	Label = "user_config"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldEmail holds the string denoting the email field in the database.
	FieldEmail = "email"
	// FieldBase holds the string denoting the base field in the database.
	FieldBase = "base"
	// FieldExtendedGroups holds the string denoting the extendedgroups field in the database.
	FieldExtendedGroups = "extended_groups"
	// FieldExcludeRules holds the string denoting the excluderules field in the database.
	FieldExcludeRules = "exclude_rules"
	// Table holds the table name of the userconfig in the database.
	Table = "user_configs"
)

// Columns holds all SQL columns for userconfig fields.
var Columns = []string{
	FieldID,
	FieldEmail,
	FieldBase,
	FieldExtendedGroups,
	FieldExcludeRules,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// EmailValidator is a validator for the "Email" field. It is called by the builders before save.
	EmailValidator func(string) error
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)
