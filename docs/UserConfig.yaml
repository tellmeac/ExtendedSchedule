openapi: 3.0.1
info:
  title: UserConfig
  description: Service to provide methods to work with user settings
  version: 1.0.0
security:
  - bearerAuth: []
servers:
  - url: http://{hostname}/api
    variables:
      hostname:
        default: localhost
paths:
  /user/{userId}/config:
    get:
      summary: "Get user config"
      tags:
        - Config
      parameters:
        - name: "userId"
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                title: "User Configuration" 
                $ref: "#/components/schemas/UserConfig"
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not found
    patch:
      summary: "Update user config"
      tags:
        - Config
      parameters:
      - name: "userId"
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not found
  
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    UserConfig:
      required:
        - id
        - email
        - extendedGroups
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
          format: email
        extendedGroups:
          type: array
          items:
            $ref: "#/components/schemas/ExtendedGroup"
    ExtendedGroup:
      required:
        - id
        - lessons
      properties:
        id:
          type: string
        lessons:
          type: array
          items:
            $ref: "#/components/schemas/Lesson"
    Lesson:
      required:
        - id
        - name
        - kind
      properties:
        id:
          type: string
        name:
          type: string
        kind:
          type: string
          example: "practice"

      
        